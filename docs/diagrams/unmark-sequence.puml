@startuml
!theme vibrant
actor User
participant ":Main" as Main
participant ":Parser" as Parser
participant ":InputValidator" as InputValidator
participant ":UnmarkCommand" as UnmarkCommand
participant ":InvalidCommand" as InvalidCommand
participant ":ExpenseManager" as ExpenseManager
participant ":Ui" as Ui

User -> Main : enters "unmark 1"
activate Main

Main -> Parser : parse("unmark 1")
activate Parser

alt valid index
    Parser -> InputValidator : validateIndex("1", "unmark")
    activate InputValidator
    InputValidator --> Parser : 1
    deactivate InputValidator

    create UnmarkCommand
    Parser -> UnmarkCommand : UnmarkCommand(1)
    activate UnmarkCommand
    UnmarkCommand --> Parser
    deactivate UnmarkCommand
    Parser --> Main : unmarkCommand

else invalid index
    Parser -> InputValidator : validateIndex("invalid", "unmark")
    activate InputValidator
    InputValidator -->> Parser : throws OrCashBuddyException e
    deactivate InputValidator

    create InvalidCommand
    Parser -> InvalidCommand
    activate InvalidCommand
    InvalidCommand --> Parser
    deactivate InvalidCommand
    Parser --> Main : invalidCommand
end

deactivate Parser

alt valid unmark command
    Main -> UnmarkCommand : execute(expenseManager, ui)
    activate UnmarkCommand

    UnmarkCommand -> ExpenseManager : unmarkExpense(1)
    activate ExpenseManager
    ExpenseManager --> UnmarkCommand : unmarkedExpense
    deactivate ExpenseManager

    UnmarkCommand -> Ui : showUnmarkedExpense(expense)
    activate Ui
    Ui --> User : displays confirmation
    deactivate Ui

    UnmarkCommand -> ExpenseManager : determineBudgetStatus()
    activate ExpenseManager
    ExpenseManager --> UnmarkCommand : status
    deactivate ExpenseManager

    opt status != OK
        UnmarkCommand -> Ui : showBudgetStatus(status, remainingBalance)
        activate Ui
        Ui --> User : displays budget alert
        deactivate Ui
    end

    deactivate UnmarkCommand
    destroy UnmarkCommand

else invalid command
    Main -> InvalidCommand : execute(expenseManager, ui)
    activate InvalidCommand

    InvalidCommand -> Ui : showUnmarkUsage()
    activate Ui
    Ui --> User : displays usage message
    deactivate Ui

    deactivate InvalidCommand
    destroy InvalidCommand
end

deactivate Main
@enduml