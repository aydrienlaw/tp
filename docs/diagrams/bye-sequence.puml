@startuml
!theme vibrant
actor User
participant ":Main" as Main
participant ":Parser" as Parser
participant ":ByeCommand" as ByeCommand
participant ":InvalidCommand" as InvalidCommand
participant ":Ui" as Ui

activate Main

loop until user enters "bye"

    User -> Main : enters command

    Main -> Parser : parse(command)
    activate Parser
    Parser -> Parser : parseByeCommand(arguments)
    activate Parser

    alt no arguments

        create ByeCommand
        Parser -> ByeCommand: ByeCommand()
        activate ByeCommand
        ByeCommand --> Parser
        deactivate ByeCommand
        Parser -> Main: byeCommand

    else with arguments (e.g., "bye extra")

        Parser -> Parser: throw OrCashBuddyException e
        deactivate Parser

        create InvalidCommand
        Parser -> InvalidCommand: InvalidCommand(e)
        activate InvalidCommand
        InvalidCommand --> Parser
        deactivate InvalidCommand
        Parser --> Main : invalidCommand

    end

    deactivate Parser
    deactivate Parser

    alt command is ByeCommand
        Main -> ByeCommand : execute(expenseManager, ui)
        activate ByeCommand

        ByeCommand -> Ui : showGoodbye()
        activate Ui
        Ui --> User : displays goodbye message
        deactivate Ui

        deactivate ByeCommand

        Main -> StorageManager : saveExpenseManager(expenseManager, ui)
        activate StorageManager
        deactivate StorageManager

        Main -> ByeCommand : isExit()
        activate ByeCommand
        ByeCommand --> Main : true
        deactivate ByeCommand
        destroy ByeCommand

    else command is InvalidCommand
        Main -> InvalidCommand : execute(expenseManager, ui)
        activate InvalidCommand
        InvalidCommand -> Ui : showError(e)
        activate Ui
        Ui --> User : displays error message
        deactivate Ui
        deactivate InvalidCommand
        destroy InvalidCommand
    end

end

deactivate Main
@enduml
